
# Yeah, chatgpt wrote this, sue me.
# Configuration
DIRECTORY="$(dirname "$0")/videos" # Directory to check
VIDEO_FILE="video.mp4"   # Video file name
VIDEO_URL="https://www.youtube.com/watch?v=2n_Ae9DGC0U"  # URL to download the video
OUTPUT_IMAGE="$(dirname "$0")/videos/random_frame.jpg" # Output image name

# Ensure the directory exists
mkdir -p "$DIRECTORY"

# Full path to the video file
VIDEO_PATH="$DIRECTORY/$VIDEO_FILE"

# Check if the video file exists
if [[ ! -f "$VIDEO_PATH" ]]; then
    echo "Video file not found. Downloading using yt-dlp..."
    yt-dlp -f "bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]" \
           --merge-output-format mp4 -o "$VIDEO_PATH" "$VIDEO_URL"
    if [[ $? -ne 0 ]]; then
        echo "Failed to download video. Exiting."
        exit 1
    fi
    echo "Download complete."
else
    echo "Video file already exists."
fi

# Get video duration in seconds
DURATION=$(ffmpeg -i "$VIDEO_PATH" 2>&1 | grep "Duration" | awk '{print $2}' | tr -d , | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }')

if [[ -z "$DURATION" ]]; then
    echo "Failed to get video duration. Exiting."
    exit 1
fi

# Generate a random timestamp within the video duration
RANDOM_TIME=$(awk -v max="$DURATION" 'BEGIN{srand(); print int(rand() * max)}')

# Convert random time to HH:MM:SS format
TIMESTAMP=$(printf "%02d:%02d:%02d" $((RANDOM_TIME/3600)) $((RANDOM_TIME%3600/60)) $((RANDOM_TIME%60)))

echo "Extracting frame at timestamp $TIMESTAMP..."

# Extract the frame
ffmpeg -ss "$TIMESTAMP" -i "$VIDEO_PATH" -vframes 1 "$OUTPUT_IMAGE" -y

if [[ $? -ne 0 ]]; then
    echo "Failed to extract frame. Exiting."
    exit 1
fi

echo "Frame saved as $OUTPUT_IMAGE."